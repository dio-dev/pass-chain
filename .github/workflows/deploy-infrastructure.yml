name: Deploy Infrastructure to GKE

on:
  push:
    branches: [main]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/deploy-infrastructure.yml'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: pass-chain-cluster
  GKE_ZONE: us-central1-a

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.12.0'

    - name: Add Helm repositories
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami
        helm repo add hashicorp https://helm.releases.hashicorp.com
        helm repo update

    - name: Deploy PostgreSQL
      run: |
        helm upgrade --install passchain-postgresql bitnami/postgresql \
          --namespace passchain \
          --create-namespace \
          --set auth.username=passchain \
          --set auth.password=${{ secrets.DB_PASSWORD }} \
          --set auth.database=passchain \
          --set primary.persistence.size=20Gi \
          --set primary.resources.requests.memory=1Gi \
          --set primary.resources.requests.cpu=500m \
          --wait

    - name: Deploy Redis
      run: |
        helm upgrade --install passchain-redis bitnami/redis \
          --namespace passchain \
          --set auth.password=${{ secrets.REDIS_PASSWORD }} \
          --set master.persistence.size=8Gi \
          --set replica.replicaCount=2 \
          --wait

    - name: Deploy Vault
      run: |
        helm upgrade --install passchain-vault hashicorp/vault \
          --namespace passchain \
          --set server.ha.enabled=true \
          --set server.ha.replicas=3 \
          --set ui.enabled=true \
          --set server.dataStorage.size=10Gi \
          --set server.resources.requests.memory=512Mi \
          --set server.resources.requests.cpu=250m \
          --wait

    - name: Initialize Vault (if needed)
      run: |
        # Check if Vault is already initialized
        if kubectl exec -n passchain passchain-vault-0 -- vault status | grep -q "Initialized.*false"; then
          echo "Initializing Vault..."
          kubectl exec -n passchain passchain-vault-0 -- vault operator init \
            -key-shares=5 \
            -key-threshold=3 \
            -format=json > vault-init.json
          echo "⚠️ IMPORTANT: Save vault-init.json securely!"
        else
          echo "Vault already initialized"
        fi

    - name: Deploy Ingress Controller
      run: |
        helm upgrade --install nginx-ingress ingress-nginx/ingress-nginx \
          --repo https://kubernetes.github.io/ingress-nginx \
          --namespace ingress-nginx \
          --create-namespace \
          --set controller.service.type=LoadBalancer \
          --wait

    - name: Verify deployments
      run: |
        kubectl get all -n passchain
        kubectl get pvc -n passchain

